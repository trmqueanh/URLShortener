@model IEnumerable<URLShortener.MVC.Models.HomeModel>

@{
    ViewData["Title"] = "History of shortened URLs";
}

<div class="container mt-5">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h2 class="mb-0">History of Shortened URLs</h2>
                </div>
                <div class="card-body">
                    @if (Model != null && Model.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Description</th>
                                        <th>Original URL</th>
                                        <th>Shortened URL</th>
                                        <th>Characters</th>
                                        <th>Created At</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr id="row-@item.Id">
                                            <td>@item.Description</td>
                                            <td>
                                                <a href="@item.OriginalUrl" target="_blank" class="text-decoration-none">
                                                    @(item.OriginalUrl.Length > 50 ? item.OriginalUrl.Substring(0, 50) + "..." : item.OriginalUrl)
                                                </a>
                                            </td>
                                            <td>
                                                <a href="@($"{Context.Request.Scheme}://{Context.Request.Host}/s/{item.ShortenedUrl}")" target="_blank" class="text-decoration-none">
                                                    @($"{Context.Request.Scheme}://{Context.Request.Host}/s/{item.ShortenedUrl}")
                                                </a>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@item.CharacterCount chars</span>
                                            </td>
                                            <td>@item.CreatedAt.ToString("MMM dd, yyyy HH:mm")</td>
                                            <td>
                                                <div class="btn-group" role="group">
                                                    <button class="btn btn-sm btn-outline-primary" onclick="copyUrl('@($"{Context.Request.Scheme}://{Context.Request.Host}/s/{item.ShortenedUrl}")')">
                                                        <i class="bi bi-clipboard"></i> Copy
                                                    </button>
                                                    <button class="btn btn-sm btn-outline-danger" onclick="deleteUrl(@item.Id, '@item.ShortenedUrl')">
                                                        <i class="bi bi-trash"></i> Delete
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info text-center">
                            <i class="bi bi-info-circle"></i> No shortened URLs found. 
                            <a href="@Url.Action("Index", "Home")" class="alert-link">Create your first shortened URL</a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the shortened URL: <strong id="deleteUrlText"></strong>?</p>
                <p class="text-muted">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let deleteId = null;
        
        function copyUrl(url) {
            navigator.clipboard.writeText(url).then(function() {
                // Show success message
                var button = event.target;
                var originalText = button.innerHTML;
                button.innerHTML = '<i class="bi bi-check"></i> Copied!';
                button.classList.remove('btn-outline-primary');
                button.classList.add('btn-success');
                
                setTimeout(function() {
                    button.innerHTML = originalText;
                    button.classList.remove('btn-success');
                    button.classList.add('btn-outline-primary');
                }, 2000);
            });
        }
        
        function deleteUrl(id, shortenedUrl) {
            deleteId = id;
            document.getElementById('deleteUrlText').textContent = shortenedUrl;
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
            deleteModal.show();
        }
        
        document.getElementById('confirmDeleteBtn').addEventListener('click', function() {
            if (deleteId) {
                fetch('/Home/Delete', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ id: deleteId })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        // Remove the row from the table
                        document.getElementById('row-' + deleteId).remove();
                        
                        // Show success message
                        showAlert('success', data.message);
                        
                        // Check if table is empty
                        var tbody = document.querySelector('tbody');
                        if (tbody.children.length === 0) {
                            location.reload(); // Reload to show "no data" message
                        }
                    } else {
                        showAlert('danger', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showAlert('danger', 'An error occurred while deleting the URL.');
                })
                .finally(() => {
                    // Close modal
                    var deleteModal = bootstrap.Modal.getInstance(document.getElementById('deleteModal'));
                    deleteModal.hide();
                    deleteId = null;
                });
            }
        });
        
        function showAlert(type, message) {
            var alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type} alert-dismissible fade show`;
            alertDiv.innerHTML = `
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            `;
            
            var container = document.querySelector('.container');
            container.insertBefore(alertDiv, container.firstChild);
            
            // Auto-dismiss after 5 seconds
            setTimeout(() => {
                if (alertDiv.parentNode) {
                    alertDiv.remove();
                }
            }, 5000);
        }
    </script>
}

